/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/API/content_selector/content_selector_dragNdrop.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/API/content_selector/content_selector_dragNdrop.js":
/*!****************************************************************!*\
  !*** ./src/API/content_selector/content_selector_dragNdrop.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function () {
  'use strict';

  var content, style;
  Sortable.create(contentSelector, {
    group: {
      name: 'content-selector',
      pull: 'clone'
    },
    sort: true,
    animation: 150,
    ghostClass: 'green-background-class',
    filter: '.resizer, .handle, .block-resizer',
    onStart: function onStart(evt) {
      $('.handle').css('display', 'none');
      $('.main-selector').each(function (ind, el) {
        $(el).find('> .content:not(:last)').addClass('border-hover');
      });
      $('.content-selector').each(function (ind, el) {
        $(el).find('> .content:not(:last)').addClass('border-hover-content');
      });
      $('.block-settings').css('display', 'none');
    },
    onEnd: function onEnd(e) {
      /*Разместить*/
      $('.border-hover').removeClass('border-hover');
      $('.border-hover-content').removeClass('border-hover-content');
      $('.handle').css('display', 'block');

      if (e.target != e.to) {
        switch (e.item.id) {
          case 'content-selector-1':
            {
              var selector1 = '<div id="content_selector' + getRandom() + '" class="col-md-12 content-selector" style="min-height:80px;">' + '<div class="block-settings"> ' + '<div class="copy-content">' + '<span class="glyphicon glyphicon-duplicate"></span>' + '</div> ' + '<div class="remove-content">' + '<span class="glyphicon glyphicon-remove"></span>' + '</div>' + '<div class="add-content-block">' + '<span class="glyphicon glyphicon-plus"></span>' + '</div>' + '<div class="remove-content-block">' + '<span class="glyphicon glyphicon-minus"></span>' + '</div>' + '<div class="settings">' + '<span class="glyphicon glyphicon-cog"></span>' + '</div>' + '</div>' + '<div class="col-md-12 content" id="content' + getRandom() + '" style="min-height:80px;"></div>' + '<div class="block-resizer"></div>' + '<div class="resizer"></div> ' + '</div>';
              $(e.item).replaceWith(selector1);
              var id = $(selector1).find('.content').attr('id'); //Драг н дроп из контентового блока

              Sortable.create($("#" + id + "").get(0), {
                group: {
                  name: 'content-selector',
                  put: 'content-selector'
                },
                sort: true,
                animation: 150,
                ghostClass: 'green-background-class',
                filter: '.resizer, .handle, .block-resizer',
                onChoose: function onChoose(e) {
                  if ($(e.item).attr('class') == 'textBlock sortable-chosen' && e.item.getElementsByTagName('iframe')[0]) {
                    var textBlockElem = document.getElementById($(e.item).attr('id'));
                    var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                    var textElem = textBlockElem.getElementsByClassName('text')[0];
                    content = iframe.contentWindow.document.body.innerHTML;
                    var styleElem = 'font-size:' + getComputedStyle(textElem).fontSize + ';';
                    styleElem += 'font-family:' + getComputedStyle(textElem).fontFamily + ';';
                    styleElem += 'line-height:' + getComputedStyle(textElem).lineHeight + ';';
                    styleElem += 'color:' + getComputedStyle(textElem).color + ';';
                    styleElem += 'text-shadow:' + getComputedStyle(textElem).textShadow + ';';
                    style = 'body {overflow-wrap: break-word; display: block; margin: 0; padding: 0;' + styleElem + '}';
                  }
                },
                onStart: function onStart(evt) {
                  $('.handle').css('display', 'none');
                  $('.main-selector').each(function (ind, el) {
                    $(el).find('> .content:not(:last)').addClass('border-hover');
                  });
                  $('.content-selector').each(function (ind, el) {
                    $(el).find('> .content:not(:last)').addClass('border-hover-content');
                  });
                },
                onEnd: function onEnd(evt) {
                  $('.handle').css('display', 'block');
                  $('.border-hover-content').removeClass('border-hover-content');
                  $('.border-hover').removeClass('border-hover');

                  if ($(evt.item).attr('class') == 'textBlock' && evt.item.getElementsByTagName('iframe')[0]) {
                    var textBlockElem = document.getElementById($(evt.item).attr('id'));
                    var textEditorPanel = textBlockElem.getElementsByClassName('text-editor-panel')[0];
                    var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                    init(iframe, content, style);
                    textEditorPanel.style.width = textBlockElem.getBoundingClientRect().width - 2 + 'px';
                    iframe.height = iframe.contentWindow.document.body.getBoundingClientRect().height + 'px';
                    addFunctionalityToIframe($(evt.item).attr('id'));
                  }

                  makePreview();
                }
              });
              break;
            }

          case 'content-selector-2':
            {
              var selector2 = '<div id="content_selector' + getRandom() + '" class="col-md-12 content-selector" style="min-height:80px;">' + '<div class="block-settings"> ' + '<div class="copy-content">' + '<span class="glyphicon glyphicon-duplicate"></span>' + '</div> ' + '<div class="remove-content">' + '<span class="glyphicon glyphicon-remove"></span>' + '</div>' + '<div class="add-content-block">' + '<span class="glyphicon glyphicon-plus"></span>' + '</div>' + '<div class="remove-content-block">' + '<span class="glyphicon glyphicon-minus"></span>' + '</div>' + '<div class="settings">' + '<span class="glyphicon glyphicon-cog"></span>' + '</div>' + '</div>' + '<div class="col-md-6 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div>' + '<div class="col-md-6 content" id="content' + getRandom() + '" style="min-height:80px;"></div>' + '<div class="block-resizer"></div>' + '<div class="resizer"></div>' + '</div>';
              $(e.item).replaceWith(selector2);
              $(selector2).find('.content').each(function () {
                Sortable.create($("#" + $(this).attr('id') + "").get(0), {
                  group: {
                    name: 'content-selector',
                    put: 'content-selector'
                  },
                  sort: true,
                  animation: 150,
                  ghostClass: 'green-background-class',
                  filter: '.resizer, .handle, .block-resizer',
                  onChoose: function onChoose(e) {
                    if ($(e.item).attr('class') == 'textBlock sortable-chosen' && e.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(e.item).attr('id'));
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      var textElem = textBlockElem.getElementsByClassName('text')[0];
                      content = iframe.contentWindow.document.body.innerHTML;
                      var styleElem = 'font-size:' + getComputedStyle(textElem).fontSize + ';';
                      styleElem += 'font-family:' + getComputedStyle(textElem).fontFamily + ';';
                      styleElem += 'line-height:' + getComputedStyle(textElem).lineHeight + ';';
                      styleElem += 'color:' + getComputedStyle(textElem).color + ';';
                      styleElem += 'text-shadow:' + getComputedStyle(textElem).textShadow + ';';
                      style = 'body {overflow-wrap: break-word; display: block; margin: 0; padding: 0;' + styleElem + '}';
                    }
                  },
                  onStart: function onStart(evt) {
                    $('.handle').css('display', 'none');
                    $('.main-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover');
                    });
                    $('.content-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover-content');
                    });
                  },
                  onEnd: function onEnd(evt) {
                    $('.handle').css('display', 'block');
                    $('.border-hover-content').removeClass('border-hover-content');
                    $('.border-hover').removeClass('border-hover');

                    if ($(evt.item).attr('class') == 'textBlock' && evt.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(evt.item).attr('id'));
                      var textEditorPanel = textBlockElem.getElementsByClassName('text-editor-panel')[0];
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      init(iframe, content, style);
                      textEditorPanel.style.width = textBlockElem.getBoundingClientRect().width - 2 + 'px';
                      iframe.height = iframe.contentWindow.document.body.getBoundingClientRect().height + 'px';
                      addFunctionalityToIframe($(evt.item).attr('id'));
                    }

                    makePreview();
                  }
                });
              });
              break;
            }

          case 'content-selector-3':
            {
              var selector3 = '<div id="content_selector' + getRandom() + '" class="col-md-12 content-selector" style="min-height:80px;">' + '<div class="block-settings"> ' + '<div class="copy-content">' + '<span class="glyphicon glyphicon-duplicate"></span>' + '</div> ' + '<div class="remove-content">' + '<span class="glyphicon glyphicon-remove"></span>' + '</div>' + '<div class="add-content-block">' + '<span class="glyphicon glyphicon-plus"></span>' + '</div>' + '<div class="remove-content-block">' + '<span class="glyphicon glyphicon-minus"></span>' + '</div>' + '<div class="settings">' + '<span class="glyphicon glyphicon-cog"></span>' + '</div>' + '</div>' + '<div class="col-md-4 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div>' + '<div class="col-md-4 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div> ' + '<div class="col-md-4 content" id="content' + getRandom() + '" style="min-height:80px;"></div>' + '<div class="block-resizer"></div>' + '<div class="resizer"></div>' + '</div>';
              $(e.item).replaceWith(selector3);
              $(selector3).find('.content').each(function () {
                Sortable.create($("#" + $(this).attr('id') + "").get(0), {
                  group: {
                    name: 'content-selector',
                    put: 'content-selector'
                  },
                  sort: true,
                  animation: 150,
                  ghostClass: 'green-background-class',
                  filter: '.resizer, .handle, .block-resizer',
                  onChoose: function onChoose(e) {
                    if ($(e.item).attr('class') == 'textBlock sortable-chosen' && e.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(e.item).attr('id'));
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      var textElem = textBlockElem.getElementsByClassName('text')[0];
                      content = iframe.contentWindow.document.body.innerHTML;
                      var styleElem = 'font-size:' + getComputedStyle(textElem).fontSize + ';';
                      styleElem += 'font-family:' + getComputedStyle(textElem).fontFamily + ';';
                      styleElem += 'line-height:' + getComputedStyle(textElem).lineHeight + ';';
                      styleElem += 'color:' + getComputedStyle(textElem).color + ';';
                      styleElem += 'text-shadow:' + getComputedStyle(textElem).textShadow + ';';
                      style = 'body {overflow-wrap: break-word; display: block; margin: 0; padding: 0;' + styleElem + '}';
                    }
                  },
                  onStart: function onStart(evt) {
                    $('.handle').css('display', 'none');
                    $('.main-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover');
                    });
                    $('.content-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover-content');
                    });
                  },
                  onEnd: function onEnd(evt) {
                    $('.handle').css('display', 'block');
                    $('.border-hover-content').removeClass('border-hover-content');
                    $('.border-hover').removeClass('border-hover');

                    if ($(evt.item).attr('class') == 'textBlock' && evt.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(evt.item).attr('id'));
                      var textEditorPanel = textBlockElem.getElementsByClassName('text-editor-panel')[0];
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      init(iframe, content, style);
                      textEditorPanel.style.width = textBlockElem.getBoundingClientRect().width - 2 + 'px';
                      iframe.height = iframe.contentWindow.document.body.getBoundingClientRect().height + 'px';
                      addFunctionalityToIframe($(evt.item).attr('id'));
                    }

                    makePreview();
                  }
                });
              });
              break;
            }

          case 'content-selector-4':
            {
              var selector4 = '<div id="content_selector' + getRandom() + '" class="col-md-12 content-selector" style="min-height:80px;">' + '<div class="block-settings"> ' + '<div class="copy-content">' + '<span class="glyphicon glyphicon-duplicate"></span>' + '</div> ' + '<div class="remove-content">' + '<span class="glyphicon glyphicon-remove"></span>' + '</div>' + '<div class="add-content-block">' + '<span class="glyphicon glyphicon-plus"></span>' + '</div>' + '<div class="remove-content-block">' + '<span class="glyphicon glyphicon-minus"></span>' + '</div>' + '<div class="settings">' + '<span class="glyphicon glyphicon-cog"></span>' + '</div>' + '</div>' + '<div class="col-md-3 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div>' + '<div class="col-md-3 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div>' + '<div class="col-md-3 content" id="content' + getRandom() + '" style="min-height:80px;">' + '<div class="handle"></div>' + '</div> ' + '<div class="col-md-3 content" id="content' + getRandom() + '" style="min-height:80px;"></div>' + '<div class="block-resizer"></div>' + '<div class="resizer"></div>' + '</div>';
              $(e.item).replaceWith(selector4);
              $(selector4).find('.content').each(function () {
                Sortable.create($("#" + $(this).attr('id') + "").get(0), {
                  group: {
                    name: 'content-selector',
                    put: 'content-selector'
                  },
                  sort: true,
                  animation: 150,
                  ghostClass: 'green-background-class',
                  filter: '.resizer, .handle, .block-resizer',
                  onChoose: function onChoose(e) {
                    if ($(e.item).attr('class') == 'textBlock sortable-chosen' && e.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(e.item).attr('id'));
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      var textElem = textBlockElem.getElementsByClassName('text')[0];
                      content = iframe.contentWindow.document.body.innerHTML;
                      var styleElem = 'font-size:' + getComputedStyle(textElem).fontSize + ';';
                      styleElem += 'font-family:' + getComputedStyle(textElem).fontFamily + ';';
                      styleElem += 'line-height:' + getComputedStyle(textElem).lineHeight + ';';
                      styleElem += 'color:' + getComputedStyle(textElem).color + ';';
                      styleElem += 'text-shadow:' + getComputedStyle(textElem).textShadow + ';';
                      style = 'body {overflow-wrap: break-word; display: block; margin: 0; padding: 0;' + styleElem + '}';
                    }
                  },
                  onStart: function onStart(evt) {
                    $('.handle').css('display', 'none');
                    $('.main-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover');
                    });
                    $('.content-selector').each(function (ind, el) {
                      $(el).find('> .content:not(:last)').addClass('border-hover-content');
                    });
                  },
                  onEnd: function onEnd(evt) {
                    $('.handle').css('display', 'block');
                    $('.border-hover-content').removeClass('border-hover-content');
                    $('.border-hover').removeClass('border-hover');

                    if ($(evt.item).attr('class') == 'textBlock' && evt.item.getElementsByTagName('iframe')[0]) {
                      var textBlockElem = document.getElementById($(evt.item).attr('id'));
                      var textEditorPanel = textBlockElem.getElementsByClassName('text-editor-panel')[0];
                      var iframe = textBlockElem.getElementsByTagName('iframe')[0];
                      init(iframe, content, style);
                      textEditorPanel.style.width = textBlockElem.getBoundingClientRect().width - 2 + 'px';
                      iframe.height = iframe.contentWindow.document.body.getBoundingClientRect().height + 'px';
                      addFunctionalityToIframe($(evt.item).attr('id'));
                    }

                    makePreview();
                  }
                });
              });
              break;
            }
        }

        makePreview();
      }

      $('.handle').resizer();
      $('.resizer').resizer_s();
      $('.block-resizer').block_resizer();
      $('.block-settings').show();
    }
  });
})();

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,